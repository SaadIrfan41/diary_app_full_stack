import type { GetServerSideProps, NextPage } from 'next'
import { useSession } from 'next-auth/client'
import Head from 'next/head'
import DiaryTable, { Diary } from '../component/DiaryTable'
import Link from 'next/link'
import client from '../utils/api'
import { gql } from '@apollo/client/core'
import { useGetDiariesQuery } from '../store/rtkapi'
export const Diaries = gql`
  query getDiaries {
    getDiaries {
      id
      tittle
      privacy
      entries {
        tittle
      }
      author {
        _id
        email
        username
        image
      }
    }
  }
`
export type dataprops = {
  data: Diary
}

const Home = ({ data }: dataprops) => {
  const { data: rtkdata, error, isLoading } = useGetDiariesQuery('')

  const [session, loading] = useSession()

  if (loading || isLoading)
    return (
      <div className=' min-h-screen flex justify-center items-center'>
        <div className='animate-spin rounded-full h-32 w-32 border-t-2 border-b-2 border-purple-500'></div>
      </div>
    )
  if (error) return <h1>Error</h1>
  console.log(session?.userId)
  console.log(rtkdata)
  return (
    <div className='flex justify-center max-w-6xl mx-auto pt-5'>
      <Head>
        <title>Create Next App</title>
        <meta name='description' content='Generated by create next app' />
        <link rel='icon' href='/favicon.ico' />
      </Head>
      <div className='flex flex-1  justify-center flex-col items-center'>
        <div>
          <Link href='/diary' passHref>
            <button
              type='button'
              className='inline-flex  px-6 py-3 border border-transparent shadow-sm text-base font-medium rounded-md text-white bg-yellow-500 hover:bg-yellow-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-yellow-500 items-start'
            >
              <span
                className='-ml-1 mr-3 h-5 w-5 material-icons-outlined '
                aria-hidden='true'
              >
                task
              </span>
              ADD New Diary
            </button>
          </Link>
        </div>
        <div className='w-full m-7'>
          <DiaryTable data={rtkdata} userid={session?.userId} />
        </div>
      </div>
      {/* <div className='flex justify-end'>All Users with a diary</div> */}
    </div>
  )
}

export default Home
// export const getServerSideProps: GetServerSideProps = async (context) => {
//   const { data } = await client.query({
//     query: Diaries,
//   })
//   return {
//     props: {
//       data,
//     },
//   }
// }
